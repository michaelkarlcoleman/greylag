#!/bin/bash

# This wrapper script will invoke greylag in parallel on our SGE cluster.

# This directory is assumed to be shared across all cluster nodes
SHAREDTMPDIR=/clusterfs/home/proteomics/tmp

# options passed to all greylag-grind invocations
greylag_options="-v"

# Divide this run into this many parts.  This should probably be at least 5x
# the number of cluster nodes available.  At the moment, this must be an exact
# power of ten.
PARTS=${GREYLAG_PARTS:-3000}


p=`basename $0`

usage() {
    cat <<EOF 1>&2
usage: $p [-l] <greylag.conf> <ms2-file> [ <ms2-file>... ]

Process a set of ms2 files as specified by the given configuration file (which
must end in '.conf' and should probably be in the current directory).

If the '-l' flag is given, stdout and stderr will be redirected to a
corresponding '.log' file.

EOF
    exit 0
}

err() {
    echo 1>&2 "$(date '+%b %e %H:%M:%S') $p: $@"
}

die() {
    err "$@"
    touch "$jobname.done-failed" || err "touch failed"
    exit 1
}

if [ "$1" == "-l" ]; then
    shift
    logging=1
fi

if [ $# -lt 2 ]; then
    usage
fi

config="$1"

rm -f ${config%.conf}.done-*

case "$config" in
    *.conf) true;;
    *) die "parameter filename must end in '*.conf'";;
esac

jobname=$(basename $config .conf)

shift
for f in "$@"; do
    if [ $(dirname $f) != "." ]; then
	die "file '$f' must be in the current working directory"
    fi
    case "$f" in
	*.ms2) true;;
	*) die "argument file '$f' should end in '.ms2'";;
    esac
done

[ -e $config ] || die "'$config' not found"

if ! ls -ld . | egrep -q '^drwxrws'; then
    chmod g+rwxs . || err "attempt to make this directory group writable failed"
fi


# Do some basic locking.  This tries to prevent simultaneous runs on the same
# parameter file, which would produce output to the same file, wasting
# resources and causing confusion.

lockfile="$jobname.lock"
trap "rm -f $lockfile" EXIT
ln -s $$ $lockfile 2>/dev/null || true
lockpid=$(ls -ld $lockfile | sed -e 's/^.*> //')

if [ $lockpid != $$ ]; then
    die "this directory locked by another process (pid = $lockpid)?
         remove $lockfile if not"
fi

# point of no return
if [ "$logging" == "1" ]; then
    exec < /dev/null > "$jobname.log" 2>&1
fi

# priority?

# Be very careful with quoting, as these names may eventually come from
# Windows users...

shared_d=$SHAREDTMPDIR/greylag-$(date +%s)-$$ # unique

# Could add removal of the shared directory to the EXIT trap, but probably we
# shouldn't because pdq (and maybe SGE) may react badly
#    trap "rm -rf $lockfile $shared_d &" EXIT

mkdir $shared_d || die "'mkdir $shared_d' failed!"

cp -p "$config" $shared_d/ || die "config cp failed!"

err set up work directory, recreating indices if necessary
for f in "$@"; do
    idx="$f.idx"
    if ! [ -e "$idx" -a "$idx" -nt "$f" ]; then
	greylag-index-spectra "$f" \
	    || die "greylag-index-spectra failed"
    fi
    cp -p "$f" "$idx" $shared_d/ || die "ms2/idx cp failed"
done

jobbasedir=$(basename $PWD)

#########################################################################
# submit the job in this shared directory so that the nodes can see it
pushd $shared_d > /dev/null || die "pushd failed!"

# use err

#cat <<EOF
#job name: $jobname
#shared dir: $shared_d
#config: $config
#ms2: $@
#EOF
#ls -l $shared_d/


err search

# It's important that the same ms2 arguments be given (in the same order) each
# time.

qsub -sync y -r y -b y -S /bin/bash -cwd -V -hard -l virtual_free=250M \
    -q all.q \
    -t 1-$PARTS \
    -N "greylag-$jobbasedir-$jobname-$$" \
    -e 'grind.$TASK_ID.err' \
    -o 'grind.$TASK_ID.out' \
    greylag-grind $greylag_options \
    --work-slice '$(greylag-sge-slice ${SGE_TASK_ID} ${SGE_TASK_LAST})' \
    id "$config" "$@"
qsub_status=$?
cat $(find . -name 'grind-*.out' -o -name 'grind-*.err' | sort -t . -k 2n,3) /dev/null
if [ "$qsub_status" != 0 ]; then
    die "grind on nodes failed"
fi

if [ "$(find . -name '*.gwr' | wc -l)" != $PARTS ]; then
    die "SGE/grind on nodes failed"
fi

popd > /dev/null || die "popd failed!"
#########################################################################

# now merge results (on master, for now)

err merge results

find $shared_d -name '*.gwr' | greylag-merge --files-on-stdin "$jobname.gwr" \
    || die "merge failed"

err write sqt files

greylag-sqt "$jobname.gwr" || die "sqt write failed"

# for now, don't do this
#rm -fr "$shared_d" $lockfile

err complete
touch "$jobname.done-ok" || err "touch failed"
exit 0
